name: Deploy to GitHub Pages

on:
  # Ejecutar en push a main branch
  push:
    branches: ["main"]

  # Permitir ejecutar manualmente desde la pestaña Actions
  workflow_dispatch:

# Establecer permisos para el GITHUB_TOKEN para permitir deployment a GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permitir solo un deployment concurrente, saltando ejecuciones en cola entre la ejecución en progreso y la más reciente
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_ENV: "production"

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./react-app/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: ./react-app

      - name: Build with Vite
        run: npm run build
        working-directory: ./react-app

      - name: Copy files to root
        run: |
          # Copiar el archivo compilado al root del repo
          cp react-app/dist/index.html ./index.html

          # Copiar assets si existen
          if [ -d "react-app/dist/assets" ]; then
            mkdir -p ./assets
            cp -r react-app/dist/assets/* ./assets/
          fi

          # Listar archivos para verificar
          ls -la

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload desde el directorio root que contiene index.html
          path: "."

  # Job de deployment
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
